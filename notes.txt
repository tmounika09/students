Basicallly,
when you interact with backend -

1. first they they will ask you to to develop an applicaiton that will interact with backend(wel will be doing it shortly)
2. later they will askk to convert the application as per backend requirement///






are those two points clear?

you will give a dummy input as output to the backend   ->
opeweaather  is an example how you can interpret the dataa.....if you do not understand it... no pm.. since its first time

i am joining with mobile as my internet connection is down




100 datas 




New project

We are going to list the students with marks and details of students
Student name
id or roll no
marks in each subject
class
total marks
rank or grade
{
"name":"Alpha",
"rollno":32,
"marks":{
"english":85,
"hindi":90,
"maths":85,
"science":95,
"social":80,
},
"class":8,

}

S no StudentName      Class     Roll no English  Maths Hindi Science Social Total Rank



tour photos and familiy phtoos -> mangater will will say
In tour photos i hhave a photo of your friend x
In tour photos i have your friend y
[{firned:x},{friend:y}]

[{student:alpha}, {student:beta}]
we will create 3 buttons 
button 1 -> to create a new student
button 2 -> to update a student detail
button 3 -> to delete a student detail
this functionality is called as CRUD

<tbody>
<tr>
<td>Alpha</td>
<td>8</td>
</tr>
</tbody>

delted 67-70 
tr = first student 67-70
for(second student -> last student){
tr(67 - 70) + tr(second student) + tr(75-78) + .....+ tr(last student)

}
tr = 0 = '';
for(first student  -> last student){
tr = tr + tr(firststudent) + tr(71-74) + tr(75-78) + .....+ tr(last student)
}


jQuery(element).find(tbody).html(67-70 + 71-74 + 75-78)


 numbers = 1 + 2 +3 + 4 =10;
 
 numbers = 1;
 numbers = numbers + 2;
 numbers =numbers + 3;
 numbers = numbers + 4; 
 
 numbers = 10
 
 
 numbers = 1;
 numbers += 2;
 numbers += 3;
 numbers += 4;
 
 = 10
 
  tablerow = '<tr><td>1</td><td>' + student.name + '</td><td>' + student.class + '</td><td>' + student.rollno + '</td><td>' + student.marks.english + '</td><td>' + student.marks.maths + '</td><td>' + student.marks.science + '</td><td>' + student.marks.social + '</td><td>' + student.marks.totalmarks + '</td><td>' + student.marks.grade + '</td></tr>';
 
 
 
 totalmarks = 0;
            totalmarks += student.marks.english;
            totalmarks += student.marks.hindi;
            totalmarks += student.marks.maths;
            totalmarks += student.marks.science;
            totalmarks += student.marks.social;
            student.marks.totalmarks = totalmarks;
            
            
            marks  -> english , h, m , s, soc
            marks.total ->0
            marks.eng -> marsk.total = 85
            marks  -> english , h, m , s, soc, total(85)
            marks.h = 85+85+90

            
            
       student.name = jQuery("#name").val();
    student.class =  jQuery("#class").val();
    student.marks = {};
    student.marks.english =  jQuery("#english").val();
    student.marks.hindi =  jQuery("#hindi").val();
    student.marks.maths =  jQuery("#maths").val();
    student.marks.science =  jQuery("#science").val();
    student.marks.social =  jQuery("#social").val();     
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 3)
 1 html
 2 css
 3 jvascript
 
 html -> collection of elements -> collection of tags
 <a></a>
 each tag has its own property and some custom property
 
 h1 -> color - black by default
 input radio - not selected by default
 
 change the default property ,  you do change it by css, by referring the element
 h1 -> by tag
 id -> by id (for a document(<html></html>)) unique
 class -> by class (repetitive)
 
 id and class are know as attributes
 
 you listing the students.. to identify with which student to be deleted, we need a unique identifier
 The id of the student is taken as unique id which is generated by database
 
student-id="student.id.$oid"

coding with javascript ->standard says, if you are providing custom(you own identification) attribute, prepend with data
data-id="student.id.$oid"

data-s-id
data-teacher-id

The table rows are created afer the document is rendered//

document is loaded -> ajax call -> get the student list -> render the rows -> create html into table

jQuery will keep a track of your elements only when loaded
 -> delete buton is created after the document is loaded
 
 -> $(document).on("click", ".btn-delete", function(){
 
 })

 $(document).on("click", ".btn-delete", function(){
       studentId=jQuery(this).attr("data-student-id");
       console.log(studentId);
       confirmDelete=confirm("Are you sure? You want to delete this student");
       if(confirmDelete){
           
           deleteStudent(studentId);
       }
    })
    
    
   Task is 
   Remove a student from the table -> delet ethe student from teh database (mlab)
   -> This preocess is irreversible -> you can not restore teh student again
   
   So before deleting -> we need ot confirm with the user 
   
   If the user confirms -> make an api call to delete it
   
   Coming to user confirmation
    -> 1. using javascript default confrim dialog
    -> 2. custom confirmation dialog -> created by us -> no-> close the dialog
                                                        -> make an api call 
    -> modal -> overlay -> rgba ->content
    
    
    function deleteInit(){
    
   $(document).on("click", ".btn-delete", function(){
       studentId=jQuery(this).attr("data-student-id");
       console.log(studentId);
       $("#confirmDelete").find("#studentId").text(studentId);
       $("#confirmDelete").show();
       
    })
    jQuery("#confirmDeleteNo").click(function(){
        $("#confirmDelete").hide();
        
        
        
    })
    jQuery("#confirmDeleteYes").click(function(){
        studentId=$("#confirmDelete").find("#studentId").text();
        deleteStudent(studentId);
    })
}


<div id="confirmDelete">
      <div class="message-wrapper">
          <div class="message">Are you sure, you want to delete this student?</div>
          <span id="studentId" style="display:none"></span>
          <div class="buttons">
              
            <button class="btn btn-warning" id="confirmDeleteYes">Yes, I want to delete the student</button>
            <button class="btn btn-primary" id="confirmDeleteNo">No, I dont want to delete the student</button>
          </div>
      </div>
  </div>
  
  
  
  function filterinit(){
    $("#search").keyup(function(){
        search=$(this).val();
        $("#students tbody tr").each(function(){
            studentname=jQuery(this).find("td:eq(1)").text();
            console.log(studentname);
            if(search.toLowerCase()==studentname.toLowerCase()){
                jQuery(this).show();
                
            }
            else{
                jQuery(this).hide();
            }
        })
    })
}
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    


















































